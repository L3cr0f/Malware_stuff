MAX_VALUE_1 = 0xFF

def init_key():
	key = []
	for counter in range(0, 0x100):
		key.append(counter)
	key.append(0x0)

	return key


def generate_key(iv, number):
	key = init_key()
	i = 0x100
	previous = 0
	counter_1 = 0
	counter_2 = 0

	while i > 0:
		previous = (previous + iv[counter_2] + key[counter_1]) & MAX_VALUE_1
		key_byte = key[counter_1] & MAX_VALUE_1
		counter_2 = counter_2 + 1
		key[counter_1] = key[previous] & MAX_VALUE_1
		key[previous] = key_byte
		counter_1 = counter_1 + 1
		if counter_2 == number:
			counter_2 = 0
		i = i - 1

	return key

def decrypt_buffer(unk_buffer, key):
	counter_2 = 0
	aux_value = 0
	decrypted_buffer = ""

	for enc_byte in unk_buffer:
		counter_2 = (counter_2 + 1) & MAX_VALUE_1
		key_byte = key[counter_2]
		aux_value = (aux_value + key[counter_2]) & MAX_VALUE_1
		key[counter_2] = key[aux_value]
		key[aux_value] = key_byte
		key_value = key[(key[counter_2] + key_byte) & MAX_VALUE_1]
		decrypted_buffer = decrypted_buffer + chr(enc_byte ^ key_value)

	return decrypted_buffer

number = 0x4

'''
iv_1 = [0x57, 0x32, 0xCC, 0xFE]
iv_2 = [0x90, 0xE1, 0x0D, 0x50]
iv_3 = [0x60, 0xE2, 0x7B, 0xA3]
iv_4 = [0x39, 0x8D, 0xA7, 0x4B]
iv_5 = [0x19, 0x43, 0xB8, 0x34]

unk_buffer_1 = bytearray([0x50, 0x83, 0xB9])
unk_buffer_2 = bytearray([0xC6, 0x63, 0xA4, 0x4E, 0x9B, 0x5D, 0x1E, 0x64, 0x92, 0xA7, 0x02])
unk_buffer_3 = bytearray([0x45, 0x43, 0x34, 0x00, 0x16, 0x4C, 0x41, 0x3C, 0x95, 0x78, 0xC5, 0xA4, 0xC5, 0x0C, 0xA8, 0xA4, 0xEE])
unk_buffer_4 = bytearray([0xF8, 0xAF, 0xA2, 0x6C, 0xE9, 0x44, 0x8A, 0xAB, 0x76, 0x9E, 0x98, 0xEF])
unk_buffer_5 = bytearray([0xC2, 0x51, 0x0A, 0xB7, 0xB0, 0x22, 0x7D, 0xBE, 0x77])
'''

'''
iv_1 = [0x0C, 0xB1, 0xC6, 0xC3]
iv_2 = [0xC0, 0xFD, 0x08, 0xF8]
iv_3 = [0x3A, 0x34, 0x3C, 0xE0]
iv_4 = [0xB2, 0x14, 0xCA, 0xE3]
iv_5 = [0xDB, 0x2F, 0x5B, 0x9E]
iv_6 = [0x5B, 0xD5, 0xBE, 0x2C]
iv_7 = [0x63, 0xFC, 0xBF, 0xD5]
iv_8 = [0xC3, 0xB5, 0x63, 0x67]


unk_buffer_1 = bytearray([0x9B, 0x83, 0x3F, 0x71, 0x50])
unk_buffer_2 = bytearray([0xF0, 0xDE, 0x46, 0xEA, 0xB8, 0xE0, 0x61])
unk_buffer_3 = bytearray([0xEB, 0x8B, 0x84, 0x5E, 0xCC, 0xF2, 0x37, 0x56, 0xE7, 0xEC, 0xEA, 0x4D, 0xC4, 0x79, 0x25, 0x68, 0xC1, 0x96, 0x40])
unk_buffer_4 = bytearray([0x60, 0x41, 0x53, 0x93, 0xE9, 0x63, 0xF8, 0x4A, 0x95, 0x4C, 0x70, 0xD9])
unk_buffer_5 = bytearray([0x82, 0x43, 0x97, 0xC9, 0xC3])
unk_buffer_6 = bytearray([0x14, 0x14, 0x25, 0x7F, 0xE2, 0x69, 0x56, 0x32, 0x0B, 0xBD, 0x8E])
unk_buffer_7 = bytearray([0x13, 0xD0, 0x75, 0x57, 0x70, 0x48, 0x1A, 0x4B, 0x67, 0x5B, 0xD9])
unk_buffer_8 = bytearray([0xCD, 0x7A, 0x16, 0xF0, 0xEE, 0x16, 0x3D, 0x23, 0xCB])
'''

iv_1 = [0x07, 0x65, 0xD7, 0xD9]
iv_2 = [0xEA, 0x96, 0x67, 0xD6]
iv_3 = [0xB6, 0xE7, 0xBB, 0xA7]
iv_4 = [0xE0, 0x61, 0x9C, 0xFA]
iv_5 = [0x51, 0xD7, 0x1D, 0xF6]
iv_6 = [0xA1, 0x44, 0x1B, 0x33]

unk_buffer_1 = bytearray([0x3D, 0x2A, 0x3D, 0x7F])
unk_buffer_2 = bytearray([0x2F, 0x9F, 0x44, 0x5A, 0x35, 0x39, 0xAF, 0x9C, 0x98, 0x73])
unk_buffer_3 = bytearray([0xD5, 0x90, 0xED, 0xAB, 0x22, 0xF7])
unk_buffer_4 = bytearray([0x67, 0xB0, 0xD1, 0xB7, 0xFA])
unk_buffer_5 = bytearray([0x92, 0xC6, 0x06])
unk_buffer_6 = bytearray([0xEF, 0x05, 0xD4, 0x93, 0x59])

key_1 = generate_key(iv_1, number)
key_2 = generate_key(iv_2, number)
key_3 = generate_key(iv_3, number)
key_4 = generate_key(iv_4, number)
key_5 = generate_key(iv_5, number)
key_6 = generate_key(iv_6, number)
#key_7 = generate_key(iv_7, number)
#key_8 = generate_key(iv_8, number)

decrypted_text_1 = decrypt_buffer(unk_buffer_1, key_1)
decrypted_text_2 = decrypt_buffer(unk_buffer_2, key_2)
decrypted_text_3 = decrypt_buffer(unk_buffer_3, key_3)
decrypted_text_4 = decrypt_buffer(unk_buffer_4, key_4)
decrypted_text_5 = decrypt_buffer(unk_buffer_5, key_5)
decrypted_text_6 = decrypt_buffer(unk_buffer_6, key_6)
#decrypted_text_7 = decrypt_buffer(unk_buffer_7, key_7)
#decrypted_text_8 = decrypt_buffer(unk_buffer_8, key_8)

print("The decrypted buffers are: ")
print(" - " + decrypted_text_1)
print(" - " + decrypted_text_2)
print(" - " + decrypted_text_3)
print(" - " + decrypted_text_4)
print(" - " + decrypted_text_5)
print(" - " + decrypted_text_6)
#print(" - " + decrypted_text_7)
#print(" - " + decrypted_text_8)